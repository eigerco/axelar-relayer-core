version: "3"

services:
  ingester:
    build:
      context: .
      dockerfile: crates/amplifier-ingester/Dockerfile
      args:
        FEATURES: gcp
    ports:
      - "8080:8080"
    volumes:
      - ./relayer-config.toml:/app/relayer-config.toml
      - ~/.config/gcloud:/home/relayer/.config/gcloud:ro
    environment:
      - TICKRATE_SECS=5
      # Optional: GCP-specific environment variables
      # - GOOGLE_APPLICATION_CREDENTIALS=/home/relayer/.config/gcloud/application_default_credentials.json
    restart: unless-stopped
    depends_on:
      - otel-collector
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  subscriber:
    build:
      context: .
      dockerfile: crates/amplifier-subscriber/Dockerfile
      args:
        FEATURES: gcp
    ports:
      - "8081:8080"
    volumes:
      - ./relayer-config.toml:/app/relayer-config.toml
      - ~/.config/gcloud:/home/relayer/.config/gcloud:ro
    environment:
      - TICKRATE_SECS=5
      # Optional: GCP-specific environment variables
      # - GOOGLE_APPLICATION_CREDENTIALS=/home/relayer/.config/gcloud/application_default_credentials.json
    restart: unless-stopped
    depends_on:
      - otel-collector
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./telemetry/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
    depends_on:
      - tempo

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo/tempo.yaml"]
    volumes:
      - ./telemetry/tempo.yaml:/etc/tempo/tempo.yaml
    ports:
      - "3200:3200"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    restart: unless-stopped
    volumes:
    - ./telemetry/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
    ports:
      - "9090:9090"
    depends_on:
      - otel-collector

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    volumes:
      - ./telemetry/grafana/provisioning:/etc/grafana/provisioning
      - ./telemetry/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
      - tempo

networks:
  default:
    driver: bridge
