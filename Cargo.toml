cargo-features = ["codegen-backend"]

[workspace.package]
version = "0.1.0"
authors = []
repository = "https://github.com/eigerco/solana-axelar-relayer-internal"
homepage = "https://github.com/eigerco/solana-axelar-relayer-internal"
license = "MIT/Apache-2.0"
edition = "2021"

[workspace]
resolver = "2"
members = ["crates/*", "xtask"]

[workspace.lints.clippy]
cargo = { priority = -1, level = "deny" }
complexity = { priority = -2, level = "deny" }
perf = { priority = -3, level = "deny" }
correctness = { priority = -4, level = "deny" }
restriction = { priority = -5, level = "deny" }
style = { priority = -6, level = "deny" }
suspicious = { priority = -7, level = "deny" }
pedantic = { priority = -8, level = "deny" }
nursery = { priority = -9, level = "deny" }

cargo_common_metadata = "allow"
missing_docs_in_private_items = "allow"
blanket_clippy_restriction_lints = "allow"
implicit_return = "allow"
dbg_macro = "allow"
single_call_fn = "allow"
missing_inline_in_public_items = "allow"
question_mark_used = "allow"
absolute_paths = "allow"
missing_trait_methods = "allow"
wildcard_imports = "allow"
shadow_reuse = "allow"
exhaustive_enums = "allow"
ref_patterns = "allow"
pub_use = "allow"
single_char_lifetime_names = "allow"
multiple_crate_versions = "allow"
exhaustive_structs = "allow"
future_not_send = "allow"
separated_literal_suffix = "allow"
mod_module_files = "allow"
negative_feature_names = "allow"
std_instead_of_alloc = "allow"
expect_used = "allow"
pub_with_shorthand = "allow"
redundant_pub_crate = "allow"
option_if_let_else = "allow"

[workspace.lints.rust]
missing_docs = { level = "warn", priority = -1 }
rust_2018_idioms = { level = "deny", priority = 0 }
unreachable_pub = { level = "warn", priority = -1 }
unused_imports = { level = "warn", priority = -1 }
unused_must_use = { level = "deny", priority = -1 }

[workspace.dependencies]
# Our crates
relayer-engine = { path = "crates/relayer-engine" }

# CLI
clap = { version = "4", features = ["derive"] }
xshell = "0.2"

# Utils
url = { version = "2.5", features = ["serde"] }
temp-env = "0.3"

# Serde
serde = { version = "1", features = ["derive"] }
toml = "0.8"
serde_json = "1"

# Errors
eyre = "0.6"
color-eyre = "0.6"

# Solana
solana-client = "2"
solana-rpc-client = "2"
solana-rpc-client-api = "2"
solana-program = "2"
solana-sdk = "2"
solana-transaction-status = "2"

# Async
tokio = { version = "1", features = ["rt", "rt-multi-thread", "macros"] }

# tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "tracing-log", "json", "valuable", "tracing"] }
tracing-error = "0.2"

# opentelemetry
opentelemetry = "0.25"
opentelemetry-otlp = { version = "0.25", default-features = false, features = ["trace", "tokio", "logs", "metrics", "grpc-tonic"] }
tracing-opentelemetry = { version = "0.26", default-features = false, features = ["metrics"] }
opentelemetry-semantic-conventions = "0.25"
opentelemetry_sdk = { version = "0.25", features = ["rt-tokio"] }
opentelemetry-appender-tracing = { version = "0.25" }

[profile.release]
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
debug = 0
# codegen-backend = "cranelift" (not supported on m1 mac)
