services:
  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    command:
      - "-js"
      - "-m=8222"

  ingester:
    build:
      context: .
      dockerfile: crates/amplifier-ingester/Dockerfile
      args:
        FEATURES: nats
    ports:
      - "8080:8080"
    volumes:
      - ./relayer-config.toml:/app/relayer-config.toml
    environment:
      - TICKRATE_SECS=5
      - NATS_URLS=nats://nats:4222
    depends_on:
      - nats
    restart: unless-stopped

  subscriber:
    build:
      context: .
      dockerfile: crates/amplifier-subscriber/Dockerfile
      args:
        FEATURES: nats
    ports:
      - "8081:8080"
    volumes:
      - ./relayer-config.toml:/app/relayer-config.toml
    environment:
      - TICKRATE_SECS=5
      - NATS_URLS=nats://nats:4222
    depends_on:
      - nats
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "6831:6831/udp" # Jaeger agent (UDP thrift)
      - "6832:6832/udp" # Jaeger agent (UDP compact thrift)
      - "5778:5778" # Agent HTTP endpoint
      - "16686:16686" # Jaeger UI
      - "14250:14250" # Collector (GRPC)
      - "14268:14268" # Collector (HTTP)
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "8889:8889" # Prometheus metrics

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - otel-collector

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus

networks:
  default:
    driver: bridge
